#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_WIDTH 128
#define OLED_HEIGHT 64
#define OLED_ADDR 0x3C

#define CLK 7
#define DT 8
#define SW 6

Adafruit_SSD1306 display(OLED_WIDTH, OLED_HEIGHT);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////             -----------------

const int numReadings = 30;

int readings[numReadings];      // the readings from the analog input
int readIndex = 0;              // the index of the current reading
int total = 0;                  // the running total
int average = 0;                // the average

int inputPin = A0;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////

const int numReadings1 = 30;

int readings1[numReadings1];      // the readings from the analog input
int readIndex1 = 0;              // the index of the current reading                                                          }-----AVERAGING FOR ANALOG INPUTS
int total1 = 0;                  // the running total                                                                         
int average1 = 0;                // the average

int inputPin1 = A8;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////

const int numReadings2 = 30;

int readings2[numReadings2];      // the readings from the analog input
int readIndex2 = 0;              // the index of the current reading
int total2 = 0;                  // the running total
int average2 = 0;                // the average

int inputPin2 = A7;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////               ----------------

int settingHi = 0;
int settingLo = 0;

void setup() {

  // initialize serial communication with computer:
  Serial.begin(9600);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  for (int thisReading = 0; thisReading < numReadings; thisReading++) {
    readings[thisReading] = 0;
  }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

  for (int thisReading1 = 0; thisReading1 < numReadings1; thisReading1++) {
    readings1[thisReading1] = 0;
  }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

  for (int thisReading2 = 0; thisReading2 < numReadings2; thisReading2++) {
    readings2[thisReading2] = 0;
  }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  analogReadResolution(12); //Set read resolution to 12 bit for better accuracy
  
  pinMode(6, OUTPUT); // Set buzzer pin
  pinMode(9, OUTPUT); // Power LED
  pinMode(10, OUTPUT); //Digital comm with pro mini (HI/LO)
  
  display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR);
  display.clearDisplay();

  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("Welcome");

  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0, 17);
  display.println("Grain Bin");
  display.println("VoltMeter");
  display.println("v1.0");

  display.display();

  delay(4000);
  digitalWrite(9, HIGH);
}

void loop() {

////////////////////////////////////////////////////////////////////////////////////////////

  // subtract the last reading:
  total = total - readings[readIndex];
  // read from the sensor:
  readings[readIndex] = analogRead(inputPin);
  // add the reading to the total:
  total = total + readings[readIndex];
  // advance to the next position in the array:
  readIndex = readIndex + 1;

  // if we're at the end of the array...
  if (readIndex >= numReadings) {
    // ...wrap around to the beginning:
    readIndex = 0;
  }

  // calculate the average:
  average = total / numReadings;

////////////////////////////////////////////////////////////////////////////////////////////

  // subtract the last reading:
  total1 = total1 - readings1[readIndex1];
  // read from the sensor:
  readings1[readIndex1] = analogRead(inputPin1);
  // add the reading to the total:
  total1 = total1 + readings1[readIndex1];
  // advance to the next position in the array:
  readIndex1 = readIndex1 + 1;

  // if we're at the end of the array...
  if (readIndex1 >= numReadings1) {
    // ...wrap around to the beginning:
    readIndex1 = 0;
  }

  // calculate the average:
  average1 = total1 / numReadings1;

//////////////////////////////////////////////////////////////////////////////////////////////

  // subtract the last reading:
  total2 = total2 - readings2[readIndex2];
  // read from the sensor:
  readings2[readIndex2] = analogRead(inputPin2);
  // add the reading to the total:
  total2 = total2 + readings2[readIndex2];
  // advance to the next position in the array:
  readIndex2 = readIndex2 + 1;

  // if we're at the end of the array...
  if (readIndex2 >= numReadings2) {
    // ...wrap around to the beginning:
    readIndex2 = 0;
  }

  // calculate the average:
  average2 = total2 / numReadings2;

/////////////////////////////////////////////////////////////////////////////////////////////

  settingHi = average1/27.18;
  settingLo = average2/27.18;

  if (settingLo < 3) {
    settingLo = 0;
  }

  if (settingHi < 3) {
    settingHi = 0;
  }
  

  if (average/13 > settingHi) {
    digitalWrite(10, LOW);
  } else {
    digitalWrite(10, HIGH);
  }

  if (average/13 < settingLo) {
    digitalWrite(10, LOW);
  } else {
    digitalWrite(10, HIGH);
  }

  //Serial.println(voltage);
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("V:");
  display.setCursor(55, 0);
  
  if (average/13 < 3) {
    display.println(0);
  } else {
    display.println(average/13);
  }
  
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(75, 30);
  display.println(settingHi);
  display.setCursor(75, 50);
  display.println(settingLo);
  display.setCursor(0, 30);
  display.println("High:");
  display.setCursor(0, 50);
  display.println("Low:");

  display.display();
  delay(1);
}
